{"version":3,"sources":["webpack:////home/circleci/project/platform/src/components/FormInput/index.js","webpack:////home/circleci/project/platform/src/components/ErrorMessage/index.js","webpack:////home/circleci/project/platform/src/utils/errors/index.js","webpack:////home/circleci/project/platform/src/format-hubs/components/HubBranding/index.tsx"],"names":["FormInput","React","Component","isFixedWidth","labelElem","_this$props","this","props","_this$props$input","input","_this$props$className","className","value","defaultValue","label","tip","required","prefix","suffix","inverted","transparent","_this$props$size","size","readOnly","error","otherProps","_objectWithoutProperties","valueProp","labelPosition","onChange","_","noop","isObject","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_extends","cn","_FormInputLabel__WEBPACK_IMPORTED_MODULE_5__","flex items-center","read-only","border border-red","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","ErrorMessage","_ref","_ref$className","_ref$style","style","onDismiss","_ref$messageProps","messageProps","bordered","children","parsedError","arguments","length","undefined","targetError","get","message","errors","_typeof","code","concat","name","reason","keys","Object","isArray","e","push","capitalize","toString","parseApiError","react_default","has-messages","isEmpty","is-bordered","Message","negative","header","list","propTypes","PropTypes","oneOfType","string","object","lodash_1","__importDefault","__webpack_require__","react_1","ui_1","faBolt_1","exports","HubBranding","whitelabel","namespace","centered","default","href","width","display","visibility","alignItems","justifyContent","maxWidth","height","opacity","color","background","padding","Icon","icon","faBolt"],"mappings":"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","file":"templates/client-containers-Login~client-containers-Page.5bc27260.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport cn from 'classnames';\nimport { Input, Label } from 'semantic-ui-react';\n\nimport FormInputLabel from '../FormInputLabel';\n\nclass FormInput extends React.Component {\n  render() {\n    const {\n      input = {},\n      className = '',\n      value,\n      defaultValue,\n      label,\n      tip,\n      required,\n      prefix,\n      suffix,\n      inverted,\n      transparent,\n      size = '',\n      readOnly,\n      error,\n      ...otherProps\n    } = this.props;\n\n    const valueProp = {};\n\n    if (defaultValue || input.defaultValue) {\n      valueProp.defaultValue = input.defaultValue || defaultValue;\n    } else {\n      valueProp.value = input.value || value || '';\n    }\n\n    if (prefix) {\n      input.label = prefix;\n      input.labelPosition = 'left';\n    } else if (suffix) {\n      input.label = suffix;\n      input.labelPosition = 'right';\n    }\n\n    if (readOnly) {\n      input.onChange = _.noop;\n    }\n\n    let isFixedWidth;\n    let labelElem;\n\n    if (_.isObject(label)) {\n      isFixedWidth = label.className === 'Label-fw';\n\n      labelElem = (\n        <Label {...label} inverted={inverted} className={cn(label.className, 'flex-1')} />\n      );\n    } else {\n      labelElem = (\n        <FormInputLabel label={label} tip={tip} required={required} inverted={inverted} />\n      );\n    }\n\n    return (\n      <div\n        className={cn('FormInput relative', className, size, {\n          'flex items-center': isFixedWidth,\n          transparent,\n          'read-only': readOnly,\n        })}\n      >\n        {labelElem}\n\n        <div className={cn('flex-1', { 'border border-red': error })}>\n          <Input {...otherProps} {...input} {...valueProp} readOnly={readOnly} />\n        </div>\n\n        {error ? <span className=\"text-sm text-red absolute pl-1\">{error}</span> : null}\n      </div>\n    );\n  }\n}\n\nexport default FormInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport cn from 'classnames';\nimport { Message } from 'semantic-ui-react';\n\nimport { parseApiError } from '@platform/utils/errors';\n\nconst ErrorMessage = ({\n  error,\n  className = '',\n  style = {},\n  onDismiss,\n  messageProps = {},\n  bordered,\n  children,\n}) => {\n  if (!error) {\n    return null;\n  }\n\n  const parsedError = parseApiError({ error });\n\n  return (\n    <div\n      className={cn('ErrorMessage', className, {\n        'has-messages': !_.isEmpty(parsedError.errors),\n        'is-bordered': bordered ? true : false,\n      })}\n      style={style}\n    >\n      <Message\n        size=\"mini\"\n        negative\n        header={\n          <div className=\"ErrorMessage-header\">\n            <span>{parsedError.message}</span>\n          </div>\n        }\n        list={_.isEmpty(parsedError.errors) ? null : parsedError.errors}\n        onDismiss={onDismiss}\n        {...messageProps}\n      />\n\n      {children}\n    </div>\n  );\n};\n\nErrorMessage.propTypes = {\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default ErrorMessage;\n","import _ from 'lodash';\n\n/**\n * Parses an error object that may or may not be coming from the Stoplight API. Useful for display purposes.\n *\n * Returns an object with a message (string) property and an errors (array) property.\n */\nexport const parseApiError = ({ error } = {}) => {\n  const targetError = _.get(error, 'response.data', error);\n\n  let message = '';\n  let errors = [];\n\n  if (typeof targetError === 'object') {\n    if (targetError.code) {\n      message = `${targetError.name || targetError.code}: ${targetError.message}`;\n    } else {\n      message = targetError.reason || targetError.message || targetError.error || targetError;\n\n      if (typeof message === 'object') {\n        const keys = Object.keys(message);\n        message = `${message[keys[0]]}`;\n      }\n    }\n\n    if (targetError.errors) {\n      // if errors is an array of strings, we can just use it\n      if (_.isArray(targetError.errors) && typeof targetError.errors[0] === 'string') {\n        errors = targetError.errors;\n      } else {\n        // else if its an array of objects, or an object itself, needs special handling\n        for (const e in targetError.errors) {\n          if (targetError.errors[e].name && targetError.errors[e].message) {\n            errors.push(`${targetError.errors[e].name}: ${targetError.errors[e].message}`);\n          } else {\n            errors.push(`${_.capitalize(e)} ${targetError.errors[e]}`);\n          }\n        }\n      }\n    }\n  } else if (typeof targetError === 'string') {\n    message = targetError;\n  }\n\n  return {\n    message,\n    errors,\n    toString() {\n      return message;\n    },\n  };\n};\n","import _ from 'lodash';\nimport React from 'react';\n\nimport { Icon } from '@core/ui';\n\nimport { faBolt } from '@fortawesome/pro-solid-svg-icons/faBolt';\n\nexport interface IHubBranding {\n  centered: boolean;\n  whitelabel: boolean;\n  namespace: {\n    name: string;\n  };\n}\n\nexport const HubBranding = ({ whitelabel, namespace, centered }) => {\n  if (whitelabel) {\n    return null;\n  }\n\n  return (\n    <a\n      href={`https://stoplight.io/documentation?utm_source=${_.get(\n        namespace,\n        'name'\n      )}&utm_medium=docs&utm_campaign=powered_by`}\n      className=\"hover:text-primary transition-all\"\n      style={{\n        width: '100%',\n        display: 'flex',\n        visibility: 'visible',\n        alignItems: 'center',\n        justifyContent: centered ? 'center' : 'flex-start',\n        maxWidth: centered ? '100%' : '300px',\n        height: '3rem',\n        opacity: 0.75,\n        color: 'rgba(19, 15, 33, .7)',\n        background: 'rgba(19, 15, 33, .075)',\n        padding: '0 13px',\n      }}\n    >\n      <div className=\"ml-1 pr-3 text-primary\">\n        <Icon icon={faBolt} />\n      </div>\n\n      <div style={{ display: 'block', visibility: 'visible', color: 'rgba(19, 15, 33, .7)' }}>\n        Powered by <b>Stoplight</b>\n      </div>\n    </a>\n  );\n};\n"],"sourceRoot":""}